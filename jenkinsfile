pipeline {
    agent any
    environment {
        DOCKER_HUB_REPO_DEV = 'deepikanandagopal/dev'
        DOCKER_HUB_REPO_PROD = 'deepikanandagopal/prod'
        DOCKER_CREDENTIALS = 'dockerhub'
    }
    stages {
        stage('Checkout') {
            steps {
                script {
                    git branch: "main", url: 'https://github.com/deepikanandagopal22/devops-build.git'
                }
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    dockerImage = docker.build("${DOCKER_HUB_REPO_DEV}:${env.BUILD_NUMBER}")
                }
            }
        }
        stage('Push Docker Image to Dev') {
            when {
                branch 'dev'
            }
            steps {
                script {
                    docker.withRegistry('', "${DOCKER_CREDENTIALS}") {
                        dockerImage.push()
                    }
                }
            }
        }
        stage('Push Docker Image to Prod') {
            when {
                branch 'main'
            }
            steps {
                script {
                    dockerImage.tag('latest')
                    docker.withRegistry('', "${DOCKER_CREDENTIALS}") {
                        dockerImage.push('latest')
                    }
                }
            }
        }
        stage('Deploy to Server') {
            when {
                branch 'main'
            }
            steps {
                sshPublisher(
                    publishers: [
                        sshPublisherDesc(
                            configName: 'ProductionServer',
                            transfers: [sshTransfer(
                                sh: """
                                    docker pull ${DOCKER_HUB_REPO_PROD}:latest &&
                                    docker stop prod-app || true &&
                                    docker run -d -p 80:80 --name prod-app ${DOCKER_HUB_REPO_PROD}:latest
                                """
                            )]
                        )
                    ]
                )
            }
        }
    }
    post {
        always {
            echo "Build completed for branch: ${env.BRANCH_NAME}"
        }
    }
}

